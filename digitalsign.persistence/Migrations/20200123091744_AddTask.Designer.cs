// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using digitalsign.persistence.Context;

namespace digitalsign.persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200123091744_AddTask")]
    partial class AddTask
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("digitalsign.domain.Domain.Message", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FromUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Payload")
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.HasIndex("FromUserId");

                    b.ToTable("Messages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Message");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.Task", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CompletedUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CompletedUserId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("MessageId")
                        .IsUnique();

                    b.ToTable("Task");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Identity")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.DailyReminder", b =>
                {
                    b.HasBaseType("digitalsign.domain.Domain.Message");

                    b.HasDiscriminator().HasValue("DailyReminder");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.MonthlyReminder", b =>
                {
                    b.HasBaseType("digitalsign.domain.Domain.Message");

                    b.Property<int>("DayOfTheMonth")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("MonthlyReminder");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.WeeklyReminder", b =>
                {
                    b.HasBaseType("digitalsign.domain.Domain.Message");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("WeeklyReminder");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.YearlyReminder", b =>
                {
                    b.HasBaseType("digitalsign.domain.Domain.Message");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("YearlyReminder");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.Message", b =>
                {
                    b.HasOne("digitalsign.domain.Domain.User", "FromUser")
                        .WithMany("Messages")
                        .HasForeignKey("FromUserId");
                });

            modelBuilder.Entity("digitalsign.domain.Domain.Task", b =>
                {
                    b.HasOne("digitalsign.domain.Domain.User", "CompletedUser")
                        .WithMany("CompletedTasks")
                        .HasForeignKey("CompletedUserId");

                    b.HasOne("digitalsign.domain.Domain.User", "CreatedUser")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("digitalsign.domain.Domain.Message", "Message")
                        .WithOne("Task")
                        .HasForeignKey("digitalsign.domain.Domain.Task", "MessageId");
                });
#pragma warning restore 612, 618
        }
    }
}
